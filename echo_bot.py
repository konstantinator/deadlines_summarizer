import os
import logging
import asyncio
from aiogram import Bot, Dispatcher, types, F
from dotenv import load_dotenv



load_dotenv()

# –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN", "your_telegram_bot_token_here")


# –£–∫–∞–∂–∏—Ç–µ –≤–∞—à Telegram ID (—É–∑–Ω–∞—Ç—å –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ @userinfobot)
YOUR_TELEGRAM_ID = None
assert YOUR_TELEGRAM_ID!=None, '—É–∫–∞–∂–∏ —Å–≤–æ–π Telegram ID (—É–∑–Ω–∞—Ç—å –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ @userinfobot)'


logging.basicConfig(level=logging.INFO)

bot = Bot(token=TOKEN)
dp = Dispatcher()

@dp.message(F.chat.type.in_(["group", "supergroup"]))
async def forward_group_messages(message: types.Message):
    """–ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –≥—Ä—É–ø–ø –∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–ª–∞–¥–µ–ª—å—Ü—É –±–æ—Ç–∞."""
    chat_id = message.chat.id
    message_id = message.message_id
    id_top= message.message_thread_id
    print('111',chat_id, id_top)

    if message.chat.type == "supergroup":
        # –î–ª—è —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø Telegram —Ç—Ä–µ–±—É–µ—Ç –æ—Å–æ–±—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏:
        # —É–¥–∞–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å "-100" –∏–∑ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —á–∞—Ç–∞
        message_link = f"https://t.me/c/{str(chat_id)[4:]}/{message_id}"
        text = (
            f"<b>–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ {message.chat.title}:</b>\n\n"
            f"{message.text}\n\n"
            f"üîó <a href='{message_link}'>–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ</a>"
            f"\n{chat_id}"
            f"\n{id_top}"
        )
    else:
        text = f"<b>–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ {message.chat.title}:</b>\n\n{message.text}, {chat_id}"

    await bot.send_message(YOUR_TELEGRAM_ID, text, parse_mode='HTML')

async def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞."""
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
